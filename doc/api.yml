swagger: '2.0'
info:
  title: Oscars API
  description: API server for an Oscars trivia game
  version: "0.0.1"
host: oscars.samnoedel.com
schemes:
  - http
produces:
  - application/json
paths:
  /status:
    get:
      summary: Server status endpint
      description: Returns metadata regarding the server's status
      responses:
        200:
          description: Successful query
          schema:
            $ref: '#/definitions/Status'
  /category:
    get:
      summary: Oscar Categories
      description: |
        Returns all of the Oscar categories that users can vote on.
      tags:
      - Category
      responses:
        200:
          description: An array of categories
          schema:
            type: array
            items:
              $ref: '#/definitions/Category'
        401:
          description: No/invalid auth token was provided
          schema:
            $ref: '#/definitions/Error'
  /category/{categoryId}:
    patch:
      summary: Updates an Oscar category
      description: |
        This endpoint is used by admins to modify the state of an oscar category,
        including closing the category and setting the correct answer.
      parameters:
      - name: categoryId
        in: path
        required: true
        description: The ID of the category to update
        type: string
      - name: body
        in: body
        required: true
        description: The updated category
        schema:
          $ref: '#/definitions/CategoryPatch'
      tags:
      - Admin
      - Category
      responses:
        200:
          description: The category was successfully updated
          schema:
            $ref: '#/definitions/Category'
        401:
          description: No/invalid auth token was provided
          schema:
            $ref: '#/definitions/Error'
        403:
          description: The given auth token is not an admin
          schema:
            $ref: '#/definitions/Error'
        404:
          description: A category with the given ID does not exist
          schema:
            $ref: '#/definitions/Error'
  /response:
    get:
      summary: User responses
      description: Retrieve all responses that the current user has submitted
      tags:
      - Response
      responses:
        200:
          description: Get all of a user's responses
          schema:
            type: array
            items:
              $ref: '#/definitions/Response'
        401:
          description: No/invalid auth token was provided
          schema:
            $ref: '#/definitions/Error'
  /response/{categoryId}:
    put:
      summary: Create a response
      description: Record a guess for a particular Oscar category
      tags:
      - Response
      parameters:
      - name: categoryId
        in: path
        required: true
        type: string
      - name: value
        in: body
        required: true
        schema:
          type: object
          properties:
            value:
              type: string
              description: The option which the user has guessed
      responses:
        201:
          description: Response logged
        400:
          description: Invalid option given
          schema:
            $ref: '#/definitions/Error'
        401:
          description: No/invalid auth token was provided
          schema:
            $ref: '#/definitions/Error'
  /login:
    post:
      summary: Log a user in
      description: Returns an auth token given a valid username
      tags:
      - User
      parameters:
      - name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/Login'
      responses:
        200:
          description: Get an auth token
          schema:
            $ref: '#/definitions/AuthToken'
  /user:
    get:
      summary: Current user
      description: Returns data about the currently logged in user
      tags:
      - User
      responses:
        200:
          description: The current user
          schema:
            $ref: '#/definitions/User'
        401:
          description: No/invalid auth token was provided
          schema:
            $ref: '#/definitions/Error'
    post:
      summary: Create a new user
      description: Creates a new user account, where the username is used as the password
      tags:
      - User
      parameters:
      - name: body
        in: body
        required: true
        description: The new user to create
        schema:
          $ref: '#/definitions/User'
      responses:
        201:
          description: The newly created user
        409:
          description: A user with the given username already exists
          schema:
            $ref: '#/definitions/Error'
  /score:
    get:
      summary: Get all players' current scores
      description: |
        This endpoint provides a summary description of all players' current scores.
      tags:
      - Score
      - User
      responses:
        200:
          description: The current scorecard
          schema:
            type: array
            items:
              $ref: '#/definitions/Score'
        401:
          description: No/invalid auth token was provided
          schema:
            $ref: '#/definitions/Error'
definitions:
  AuthToken:
    type: object
    properties:
      token:
        type: string
        description: A JSON web token
  Category:
    type: object
    properties:
      id:
        type: string
        description: Unique ID of this category
      name:
        type: string
        description: The name of the Oscar category
      options:
        type: array
        description: The nominations for the category
        items:
          type: string
      closed:
        type: string
        description: |
          ISO 8601 date in UTC time at which the category was closed
      answer:
        type: string
        description: The correct answer to the category
  CategoryPatch:
    type: object
    properties:
      closed:
        type: string
        description: |
          ISO 8601 date in UTC time at which the category was closed
      answer:
        type: string
        description: The correct answer to the category
  Login:
    type: object
    properties:
      username:
        type: string
        description: The username to log in as
  Response:
    type: object
    properties:
      category:
        type: string
        description: The name of the category this response is for
      value:
        type: string
        description: The guess that the user submitted
  Score:
    type: object
    properties:
      name:
        type: string
        description: Display name of the user
      score:
        type: number
        description: The score for the user
  Status:
    type: object
    properties:
      version:
        type: string
        description: SemVer version number of the API
      uptime:
        type: integer
        description: The number of seconds since the server was started
  User:
    type: object
    properties:
      name:
        type: string
        description: Human-readable name of the user
      username:
        type: string
        description: Machine-readable name of the user. Doubles as the user's password.
  Error:
    type: object
    properties:
      code:
        type: string
        description: Code classifying this error
      message:
        type: string
        description: Reason for the error
